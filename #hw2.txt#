宿題その１：matrix.cについて
	＞＞ 計算量は、O(n^2)；N×N行列の計算を、for文を二重に回すことで要素ひとつずつ順に積を算出しているため。
	　　(0 < N <=300)で実行した結果を、(Nを横軸,実行時間を縦軸)としてプロットした。
	　　このグラフは大凡単調増加していると言える。これは単純にサイズNが増えるほど計算する回数が増えるからと考えられる。O(n^2)というのも満たしていそうである。


宿題その２：現実の大規模なデータベースでは、（もちろんいろいろなものがあるが）ハッシュテーブルではなく木構造が使われることが多い。その理由
	＞＞木構造の方が変更が楽であること。
	現実の大規模なデータベースでは、データ量の予測が容易ではないため変更をすることで都度対応していくと考えられるため、変更の手軽い方が適している。ハッシュテーブルでは、変更を加えるにはハッシュ関数にどのような工夫をするか考えなければならない。
	＞＞木構造は余分なメモリが要らないこと。
	ハッシュテーブルでは性質上実際に使うよりも多めにメモリを確保しなければならない。大規模なデータベースなのに、空間計算量はより大きくなってしまう。
	＞＞木構造は要素が整列して格納されていること。
	ハッシュテーブルではハッシュ関数に従って要素が振り分けられるため、整列していない場合がある。
	＞＞木構造の方がコードがわかりやすいこと。
	木構造は方法がほとんど決まっているため、コードを書きやすく読みやすい。一方ハッシュテーブルはどのような関数を用いたか、などが様々なため木構造よりコードがわかりにくい。

宿題その３：
